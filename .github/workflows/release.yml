# .github/workflows/release.yml
name: Build, Publish & Attest

on:
  push:
    branches: [ main ]
    tags:    [ 'v*' ]
  workflow_dispatch:

env:
  REGISTRY:   ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=ref,event=branch
            type=sha,format=short

      - name: Build & push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags:       ${{ steps.meta.outputs.tags }}
          labels:     ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to:   type=gha,mode=max

  attest:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents:      write
      packages:      write
      id-token:      write
      attestations:  write

    steps:
      - name: Checkout code (with tags)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Tinfoil build & measure
        uses: tinfoilsh/pri-build-action@v0.1.2
        with:
          config-file: ${{ github.workspace }}/tinfoil-config.yml
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Capture deployment JSON hash
        id: tinfoil-hash
        run: |
          HASH=$(sha256sum output/tinfoil-deployment.json | cut -d ' ' -f1)
          echo "::set-output name=sha::sha256:${HASH}"

      - name: Upload attestation to Sigstore
        uses: actions/attest@v1
        with:
          subject-digest: ${{ steps.tinfoil-hash.outputs.sha }}
          push-to-registry: false
          show-summary: true
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare release notes
        id: notes
        run: |
          echo "::set-output name=body::$(cat output/release.md)"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name:     Release ${{ github.ref_name }}
          body:     ${{ steps.notes.outputs.body }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
